{
  "file_name": "05_beep_qr_usage_store.sql",
  "timestamp": "/Users/sharlenechew/redshift-semantic",
  "business_question": "How is the adoption of our Beep QR ordering feature? For each store that has ever used it, show me what percentage of their total in-store sales and transactions came from QR orders last month.",
  "golden_sql": "with q as (\nselect distinct tr.storeid\n    \nfrom storehub_mongo.transactionrecords tr\n\nleft join storehub_mongo.businesses b\n    on tr.business = b.name\n\nwhere CHARINDEX('internal', b.planid) = 0 \n    and CHARINDEX('@storehub.com', b.email) = 0\n    and tr.channel = 3\n    and tr.shippingtype in ('dineIn','takeaway')\n    and tr.status not in ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\n    and b.country in ('MY')\n    and tr.createdtime >= dateadd(hour,-8,'2019-07-01') -- start of Beep QR transactions\n\nselect \n    tr.business,\n    tr.storeid,\n    date_trunc('month', cast(dateadd(hour,8,tr.createdtime) as date)) as month,\n    --count(distinct cast(dateadd(hour,8,tr.createdtime) as date)) as transacting_days,\n    count(distinct tr.receiptnumber) as instore_txn,\n    sum(tr.total) as instore_gmv,\n    count(distinct case when tr.channel = 3 then tr.receiptnumber end) as qrtxn,\n    sum(case when tr.channel = 3 then tr.total end) as qrgmv,\n    case when (qrgmv is not null and instore_gmv > 0) then qrgmv / instore_gmv else 0 end as qr_usage_gmv,\n    case when (qrtxn > 0 and instore_txn > 0) then cast(qrtxn as float) / cast(instore_txn as float) else 0 end as qr_usage_txn\n    \nfrom storehub_mongo.transactionrecords tr\n\nwhere tr.storeid in (select q.storeid from q)\n    and ((tr.channel = 3 and tr.shippingtype in ('dineIn','takeaway')) or tr.channel is null or tr.channel = 2)\n    and tr.transactiontype = 'Sale'\n    and tr.iscancelled is not TRUE\n    and tr.status not in ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\n    --and tr.createdtime >= dateadd(hour,-8,date_trunc('month', cast(getdate() as date)))\n    and tr.createdtime >= \n        CASE \n            WHEN date_trunc('month',dateadd(hour,-8,cast(getdate() as date))) = date_trunc('month',dateadd(hour,-8,cast(getdate()-7 as date))) THEN dateadd(hour,-8,date_trunc('month',cast(getdate() as date)))\n            ELSE dateadd(hour,-8,date_trunc('month',cast(getdate() + INTERVAL '-1 month' as date)))\n        END\n    \n\ngroup by 1,2,3\norder by 3 ASC, 1 ASC",
  "ai_generated_sql": "WITH qr_stores AS (\n    SELECT DISTINCT\n        tr.storeid\n    FROM\n        storehub_mongo.transactionrecords AS tr\n    WHERE\n        tr.channel = 3\n        AND tr.shippingtype IN ('dineIn', 'takeaway')\n        AND tr.status NOT IN ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\n)\nSELECT\n    b.name AS business_name,\n    tr.storeid,\n    SUM(CASE WHEN tr.channel = 3 THEN tr.total ELSE 0 END) / NULLIF(SUM(tr.total), 0) AS qr_sales_percentage,\n    CAST(COUNT(DISTINCT CASE WHEN tr.channel = 3 THEN tr.receiptnumber END) AS FLOAT) / NULLIF(COUNT(DISTINCT tr.receiptnumber), 0) AS qr_transactions_percentage\nFROM\n    storehub_mongo.transactionrecords AS tr\n    JOIN storehub_mongo.businesses AS b ON tr.business = b.name\nWHERE\n    tr.storeid IN (SELECT storeid FROM qr_stores)\n    AND tr.createdtime >= DATEADD(hour, -8, DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month'))\n    AND tr.createdtime < DATEADD(hour, -8, DATE_TRUNC('month', CURRENT_DATE))\n    AND ((tr.channel = 3 AND tr.shippingtype IN ('dineIn', 'takeaway')) OR tr.channel IS NULL OR tr.channel = 2)\n    AND tr.transactiontype = 'Sale'\n    AND tr.iscancelled IS NOT TRUE\n    AND tr.status NOT IN ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\nGROUP BY\n    b.name,\n    tr.storeid\nORDER BY\n    business_name,\n    storeid;",
  "api_result": {
    "success": false,
    "status_code": null,
    "error": "HTTPSConnectionPool(host='metabase.shub.us', port=443): Read timed out. (read timeout=30)",
    "query": "WITH qr_stores AS (\n    SELECT DISTINCT\n        tr.storeid\n    FROM\n        storehub_mongo.transactionrecords AS tr\n    WHERE\n        tr.channel = 3\n        AND tr.shippingtype IN ('dineIn', 'takeaway')\n        AND tr.status NOT IN ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\n)\nSELECT\n    b.name AS business_name,\n    tr.storeid,\n    SUM(CASE WHEN tr.channel = 3 THEN tr.total ELSE 0 END) / NULLIF(SUM(tr.total), 0) AS qr_sales_percentage,\n    CAST(COUNT(DISTINCT CASE WHEN tr.channel = 3 THEN tr.receiptnumber END) AS FLOAT) / NULLIF(COUNT(DISTINCT tr.receiptnumber), 0) AS qr_transactions_percentage\nFROM\n    storehub_mongo.transactionrecords AS tr\n    JOIN storehub_mongo.businesses AS b ON tr.business = b.name\nWHERE\n    tr.storeid IN (SELECT storeid FROM qr_stores)\n    AND tr.createdtime >= DATEADD(hour, -8, DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month'))\n    AND tr.createdtime < DATEADD(hour, -8, DATE_TRUNC('month', CURRENT_DATE))\n    AND ((tr.channel = 3 AND tr.shippingtype IN ('dineIn', 'takeaway')) OR tr.channel IS NULL OR tr.channel = 2)\n    AND tr.transactiontype = 'Sale'\n    AND tr.iscancelled IS NOT TRUE\n    AND tr.status NOT IN ('cancelled', 'created', 'failed', 'paymentCancelled', 'pendingPayment', 'pendingVerification')\nGROUP BY\n    b.name,\n    tr.storeid\nORDER BY\n    business_name,\n    storeid;"
  }
}