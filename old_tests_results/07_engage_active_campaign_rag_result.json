{
  "file_name": "07_engage_active_campaign.sql",
  "timestamp": "/Users/sharlenechew/redshift-semantic",
  "business_question": "I need an operational dashboard to monitor all currently active Engage campaigns in Malaysia. For each campaign, I need to see its performance metrics like total SMS sent, the merchant's current SMS credit balance, and what percentage of the eligible customer base has been targeted.",
  "golden_sql": "select \n    c.business,\n    b.businesstype,\n    c.name as \"campaign\",\n    count(distinct case when cj.pushstatus = 'SUCCESS' and cj.createdtime >= '2022-09-23' then cj._id end) as total_sms_sent,\n    min(case when cj.createdtime >= '2022-09-23' then dateadd(hour,8,cj.createdtime) end) as first_sms_sent_time, -- start of Engage\n    cust.\"phone\" as customers_with_phones,\n    cust.\"cb count\" as customers_with_cashback,\n    cust.\"bday count\" as customers_with_birthday,\n    b.smscredits as sms_credit_balance,\n    case \n\t    when total_sms_sent > 0 and customers_with_cashback > 0 and c.name in ('Cashback Reminder','Expiring Cashback Alert') then cast(total_sms_sent as float) / cast(customers_with_cashback as float) \n\t    when total_sms_sent > 0 and c.name in ('Win Back Lost Customers','Boost Google Reviews','Welcome New Customers') then cast(total_sms_sent as float) / cast(customers_with_phones as float)\n\t    when total_sms_sent > 0 and customers_with_birthday > 0 and c.name = 'Birthday Promotion' then cast(total_sms_sent as float) / cast(customers_with_birthday as float) \n\t    else 0\n\tend as \"% customer targeted\",\n    --cast(total_sms_sent as float) / cast(customers_with_phones as float) as \"% customer targeted\",\n    REGEXP_REPLACE (c.template, '&#39;', '''') as template,\n    dateadd(hour,8,c.starttime) as campaign_start_time\n\nfrom storehub_mongo.campaigns c\n\nleft join storehub_mongo.campaignjobs cj\n    on c.business = cj.business\n    and c.globalcampaigninformationid = cj.globalcampaigninformationid\n\nleft join storehub_mongo.businesses b\n    on c.business = b.name\n    \nleft join (\n    SELECT \n        cu.business AS \"business\", \n        count(distinct cu.customerid) AS \"count\",\n        count(distinct cu.phone) as \"phone\",\n        count(distinct case when cu.storecreditsbalance > 0 then cu.customerid end) as \"cb count\",\n        count(distinct case when (cu.birthday is not null or co.birthday is not null) then cu.customerid end) as \"bday count\"\n    \n    FROM transformations.mask_customers cu\n    \n    left join transformations.mask_consumers co\n        on cu.consumerid = co._id\n            \n    where cu.isdeleted is NOT TRUE\n    \n    group by 1\n    ) cust\n    on cust.\"business\" = b.name\n    \nwhere CHARINDEX('internal', b.planid) = 0 \n    and CHARINDEX('@storehub.com', b.email) = 0\n    and b.subscriptionstatus = 'Active'\n    and c.status = 'ACTIVE'\n    --and cj.pushstatus = 'SUCCESS'\n    and b.country 'MY'\n\ngroup by 1,2,3,6,7,8,9,11,12\norder by 4 DESC",
  "ai_generated_sql": "SELECT\n    c.name AS campaign_name,\n    COUNT(DISTINCT CASE WHEN cj.pushstatus = 'SUCCESS' THEN cj._id END) AS total_sms_sent,\n    b.smscredits AS sms_credit_balance,\n    CAST(COUNT(DISTINCT CASE WHEN cj.pushstatus = 'SUCCESS' THEN cj._id END) AS REAL) / \n    CASE\n        WHEN c.name IN ('Cashback Reminder','Expiring Cashback Alert') THEN CAST(COUNT(DISTINCT CASE WHEN cu.storecreditsbalance > 0 THEN cu.customerid END) AS REAL)\n        WHEN c.name IN ('Win Back Lost Customers','Boost Google Reviews','Welcome New Customers') THEN CAST(COUNT(DISTINCT cu.phone) AS REAL)\n        WHEN c.name = 'Birthday Promotion' THEN CAST(COUNT(DISTINCT CASE WHEN cu.birthday IS NOT NULL OR co.birthday IS NOT NULL THEN cu.customerid END) AS REAL)\n        ELSE 1 -- Avoid division by zero if no matching criteria\n    END AS percentage_targeted\nFROM\n    storehub_mongo.campaigns c\nJOIN\n    storehub_mongo.businesses b ON c.business = b.name\nLEFT JOIN\n    storehub_mongo.campaignjobs cj ON c.business = cj.business AND c.globalcampaigninformationid = cj.globalcampaigninformationid\nLEFT JOIN\n    transformations.mask_customers cu ON cu.business = b.name\nLEFT JOIN\n    transformations.mask_consumers co ON cu.consumerid = co._id\nWHERE\n    c.status = 'ACTIVE' AND b.country = 'MY'\nGROUP BY\n    c.name, b.smscredits",
  "api_result": {
    "success": false,
    "status_code": null,
    "error": "HTTPSConnectionPool(host='metabase.shub.us', port=443): Read timed out. (read timeout=30)",
    "query": "SELECT\n    c.name AS campaign_name,\n    COUNT(DISTINCT CASE WHEN cj.pushstatus = 'SUCCESS' THEN cj._id END) AS total_sms_sent,\n    b.smscredits AS sms_credit_balance,\n    CAST(COUNT(DISTINCT CASE WHEN cj.pushstatus = 'SUCCESS' THEN cj._id END) AS REAL) / \n    CASE\n        WHEN c.name IN ('Cashback Reminder','Expiring Cashback Alert') THEN CAST(COUNT(DISTINCT CASE WHEN cu.storecreditsbalance > 0 THEN cu.customerid END) AS REAL)\n        WHEN c.name IN ('Win Back Lost Customers','Boost Google Reviews','Welcome New Customers') THEN CAST(COUNT(DISTINCT cu.phone) AS REAL)\n        WHEN c.name = 'Birthday Promotion' THEN CAST(COUNT(DISTINCT CASE WHEN cu.birthday IS NOT NULL OR co.birthday IS NOT NULL THEN cu.customerid END) AS REAL)\n        ELSE 1 -- Avoid division by zero if no matching criteria\n    END AS percentage_targeted\nFROM\n    storehub_mongo.campaigns c\nJOIN\n    storehub_mongo.businesses b ON c.business = b.name\nLEFT JOIN\n    storehub_mongo.campaignjobs cj ON c.business = cj.business AND c.globalcampaigninformationid = cj.globalcampaigninformationid\nLEFT JOIN\n    transformations.mask_customers cu ON cu.business = b.name\nLEFT JOIN\n    transformations.mask_consumers co ON cu.consumerid = co._id\nWHERE\n    c.status = 'ACTIVE' AND b.country = 'MY'\nGROUP BY\n    c.name, b.smscredits"
  }
}